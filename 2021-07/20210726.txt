Ansible

IaC(Infrastructure as Code)
 - 코드형 인프라스트럭쳐
 - 인프라 관리시 시스템이 읽을 수 있는 코드의 형태로 관리
 - 인프라 정의 파일을 한번 정의하면 여러번 재사용이 가능하다.

IaC 장점
 - 비용 절감
 - 빠른 속도
 - 안정성이 높다
 - 코드화 및 버전관리
 - 재사용성

IaC 도구 구분

1) 구성관리(Configuration Management)
 - Ansible, Chef, Pupet, SaltStack 등

2) 배포(Deployment)
 - AWS Cloudformation, Openstack Heat, Terraform 등

가변 인프라 / 불변 인프라

절차적 언어 / 선언적 언어
절차적 언어: 원하는 최종 상태에 도달하기 위해 코드가 단계별로 정의도고 실행되는 언어
 - Ansible, Chef

선언적 언어: 원하는 최종 형태만 정의하면 구성에 필요한 세부 절차는 알아서 실행되는 언어
 - AWS Cloudformation, Pupet, SaltStack, Terraform 등

마스터 및 에이전트 유무
 - 마스터: 인프라의 정보, 구성 관리 및 배포를 위한 정보를 가진 서버
   - Chef, Pupet, SaltStack
 - 에이전트: 서버로부터 명령을 전달받아 수행하기 위한 프로그램
   - Chef, Pupet, SaltStack

Ansible
 - 애플리케이션 및 IT 인프라 관리를 자동화 할 수 있는 IaC 도구
 - Host 구성
 - 프로그램 언어에 익숙하지 않은 사용자도 충분히 사용할 수 있음
 - 소규모부터 엔터프라이즈급까지 다양한 환경에서 사용이 가능함
 - 별도의 에이전트 없이 호스트들을 관리함

제어 노드 (Control node)
 - Ansible로 관리노드(Managed node)를 관리하기 위한 호스트
 - Ansible이 설치되면 ansible 명령을 통해 각 관리노드를 관리함
 - Linux, Windows 등의 운영체제가 설치된 호스트를 관리할 수 있음(단, 제어 노드는 반드시 리눅스 호스트여야 함)

관리노드 (Managed node)
 - Ansible 제어 노드에 의해 관리되는 호스트
 - Linux, Windows 운영체제를 관리할 수 있음
 - 관리 노드(Managed node) 에는 별도로 에이전트가 설치되지 않음
 - Windows가 설치된 관리 노드는 WinRM이 설치 되어있어야 함


인벤토리(Inventory)
 - 관리 노드(Managed node)의 목록이 담긴 파일
 
플러그인(Plugin)
 - Ansible의 핵심 기능을 확장하기 위한 프로그램

모듈(Module)
 - Ansible을 실행하는 python 코드 단위
 - 호스트에 패키지 설치/업데이트/제거
 - 시스템 명령어 실행, 파일 복사, 파일 내용 변경 등의 작업이 가능함

작업(Task)
 - Ansible의 실행단위

Ad-hoc 명령
 - ansible 명령을 이용하여 단일성 작업을 실해하는 명령


플레이(Play)
 - 특정 관리 노드(Managed node)를 대상으로 한 순서가 있는 작업의 목록

플레이북(Playbook)
 - 하나 이상의 플레이를 담고 있는 파일(YAML)
 - ansible-playbook 명령어를 사용하여 플레이북을 실행

Ansible-Server: enp0s3 10.0.2.10/24 enp0s8 192.168.56.10
Ansible-node01: enp0s3 10.0.2.11/24 enp0s8 192.168.56.11
Ansible-node02: enp0s3 10.0.2.12/24 enp0s8 192.168.56.12
Ansible-node03: enp0s3 10.0.2.13/24 enp0s8 192.168.56.13

cd /etc/ssh
ls -l
rm ssh_host_*
systemctl restart sshd.service

Ansible 기본

인벤토리(inventory)

그룹 종류
 - all: 인벤토리 내의 모든 호스트
 - GROUP1:  인벤토리의  GROUP1 그룹
 - ungrouped: 인벤토리에서 그룹에 속하지 않은 호스트들의 그룹

Ansible 구성 파일 (ansible.cfg)
구성 파일 우선순위
1) ANSIBLE_CONFIG 환경변수로 지정한 경로
2) 현재 디렉터리에 있는 ansible.cfg
3)~/.ansible/ansible.cfg
4)/etc/ansible/ansible.cfg
