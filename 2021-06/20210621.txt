데이터 베이스
- 개념 : 데이터를 좀 더 체계적으로 정리하고 사용하기 위한 형태
- 종류 : (계층형, 별형 등) , 관계형 데이터베이스 / NoSQL
	관계형 -> 데이터를 테이블 형태로 저장
	NoSQL -> 데이터 타입의 제약없이 대규모 데이터를 모으기 적합

관계형 데이터베이스
DBMS - OracleDB , MySQL , MariaDB , MS-SQL
	공통적으로 SQL 구문을 사용

SQL 

SELECT	: 데이터를 검색 (검색만! 하고 저장은 하지 않음)

SELECT	컬럼이름...
FROM	테이블이름
WHERE	컬럼이름  비교연산자  값	-> 조건식
GROUP BY  컬럼이름		-> 컬럼을 기준으로 그룹을 나눈다.
HAVING	그룹함수(컬럼이름)  비교연산자  값	-> 조건식(그룹함수 사용 시)
ORDER BY   컬럼이름  정렬방식


DML - INSERT / UPDATE / DELETE (데이터를 수정할 때 사용)

INSERT INTO   테이블이름(컬럼이름...)
VALUES   (값...)			-> 값은 제약조건과 타입에 맞게 입력.

UPDATE   테이블이름
SET	컬럼이름 = 값	-> 문자는 ''로 묶어준다.
WHERE	조건식		-> 필수는 아니지만 생략하면, 모든 값이 바뀐다.

DELETE FROM   테이블이름
WHERE	조건식		=> 조건이 없거나 잘못되면 다 지워진다.

이러한 작업들은 모두 트렌젝션 단위로 처리
트렌젝션은
1. TCL (COMMIT/ROLLBACK) 을 사용하거나	-> 권장
2. 설정값으로 자동 COMMIT 설정이 되어 있거나	
	-> 명령어 하나하나가 트랜젝션
	작업하는 모든 내용이 실제 스토리지에 바로 저장
3. 정상/비정상 서비스(연결)종료
	-> 정상 : 저장(COMMIT) , 비정상 : 취소(ROLLBACK)
할 경우 종료된다.


DDL - CREATE / DROP / ALTER : 객체(테이블/사용자/제약조건...) 를 관리하는 작업

CREATE  TABLE  테이블이름
( 컬럼이름  데이터타입(길이)  제약조건 및 특성 ,  ... )

DROP  TABLE  테이블이름


DCL - GRANT , REVOKE  : 사용자의 권한을 설정
Role-Based Access Control : 역할 기반의 권한 제어 방식

SELECT
UPDATE
INSERT	===>  ROLE    ===>   USER
DELETE
...

	=> FLUSH PRIVILEGES ;	(MySQL , MariaDB)

설치 과정 (MariaDB)
1. 패키지설치	-> mariadb-server
2. 서비스 설정	-> /etc/my.cnf  ,  /etc/my.cnf.d/*.cnf
		autocommit=0	자동저장 비활성화
		skip-networking=1	네트워크 사용 비활성화
	# mysql_secure_installation	: 보안설정
3. 서비스 활성화	-> mariadb
4. 방화벽 설정	-> mysql


데이터베이스 백업
논리적 백업		물리적 백업
---------------------------------------------------
이식성 우수(텍스트)		이식성이 떨어짐(HW/DBMS)
시간이 오래걸림		시간이 빠름
사이즈 커짐		사이즈 작다
로그/설정파일 내용 X	로그/설정파일 포함
			테이블 별로 백업 X


데이터베이스 이중화 구성
- 마스터/슬래이브 구성
- 시스템 문제가 발생해도 서비스 제공에 지장이 없기 위해
- 마스터 서버에서 데이터베이스를 관리
- 슬래이브는 마스터의 DB를 복제
- 사용자는 마스터/슬래이브 각각에 접근

master.himedia.exam.com 에 마스터 DB 서버 구성
slave.himedia.exam.com 에 슬래이브 DB 서버 구성
마스터 서버에 데이터 추가/수정 작업 후 슬래이브에서 확인

iSCSI 
IP-SAN 방식 중의 하나

스토리지 연결 방식 3가지
- DAS : 스토리지와 시스템이 케이블을 통해서 직접 연결
- NAS : 네트워크로 연결 ( 스토리지 제공 시 파일시스템 포멧 후 제공 -> 디렉토리 )
- SAN : 네트워크로 연결 ( 스토리지 자체를 그대로 제공 )
	-> FC-SAN / IP-SAN


iSCSI 구성
iSCSI 서버 (스토리지 제공)		-> target 
1. 패키지 설치
	- targetcli
2. 서비스 구성
	1) 스토리지 준비 ( 디스크 , 파티셔닝 , LVM )
	2) targetcli 명령어 사용 
3. 서비스 활성화
	- target		-> enable 필수 
			(재부팅 후 targetcli 실행 시 기존 설정이 다 사라짐)
4. 방화벽 설정
	- 3260/tcp 	-> targetcli 에서 portal 에서 설정하는 포트

iSCSI 클라이언트 (스토리지 사용)	-> initiator 
1. 패키지 설치	-> iscsi-initiator-utils
2. 연결 설정
	1) IQN 이름 설정 ( target 에서 설정한 ACL 의 이름과 동일 )
		/etc/iscsi/initiatorname.iscsi
	2) iscsiadm 명령어로 검색 / 로그인 설정
3. 사용
	파티셔닝 -> 파일시스템 -> 마운트
				옵션 : _netdev
